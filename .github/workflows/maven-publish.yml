# .github/workflows/release.yml
name: Auto Release and Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write    # for creating releases
      packages: write    # for publishing to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # settings.xml is expected at the repository root
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github           # must match <id> in settings.xml
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        run: mvn -B package --file FoliaPhantom/pom.xml

      - name: Determine Version
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout --file FoliaPhantom/pom.xml)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Create Git Tag (if missing)
        run: |
          # Check if tag already exists on remote
          if git ls-remote --tags origin | grep -q "refs/tags/v${{ env.VERSION }}$"; then
            echo "Tag v${{ env.VERSION }} already exists on remote. Skipping tagging."
          else
            git tag "v${{ env.VERSION }}"
            git push origin "v${{ env.VERSION }}"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          files: FoliaPhantom/target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: mvn -DskipTests deploy --file FoliaPhantom/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
